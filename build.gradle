plugins {
  id 'java'
  id 'org.springframework.boot' version '3.0.4'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.graalvm.buildtools.native' version '0.9.20'
  id 'pl.allegro.tech.build.axion-release' version '1.15.0'
  id 'maven-publish'
}

apply plugin: 'java'

group = 'org.springframework.samples'
version = scmVersion.version
sourceCompatibility = '17'

repositories {
  mavenCentral()
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username "admin"
                password "robot273"
            }
            allowInsecureProtocol=true
            if(project.version.endsWith('-SNAPSHOT')) {
              
                url "http://localhost:8082/repository/maven-snapshots/"
            } else {
                url "http://localhost:8082/repository/maven-release/"
            }
        }
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.springframework.samples.petclinic.PetClinicApplication'
        )
    }
}



// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             from components.java
//         }
//     }
//     repositories {
//         maven {
//             url "http://localhost:8082/repository/maven-release/"
//             allowInsecureProtocol = true
//             credentials {
//                 username = "admin"
//                 password = "robot273"
//             }
//         }
//           maven {
//             url "http://localhost:8082/repository/maven-snapshots/"
//             allowInsecureProtocol = true
//             credentials {
//                 username = "admin"
//                 password = "robot273"
//             }
//         }
//     }
// }

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.2.3"

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
  useJUnitPlatform()
}
